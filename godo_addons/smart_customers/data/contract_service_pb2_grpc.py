# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import contract_service_pb2 as contract__service__pb2


class AccountSyncStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AccountSyncMethod = channel.unary_unary(
                '/service_contract.AccountSync/AccountSyncMethod',
                request_serializer=contract__service__pb2.AccountSyncRequest.SerializeToString,
                response_deserializer=contract__service__pb2.AccountSyncResponse.FromString,
                )
        self.AccountUpdateMethod = channel.unary_unary(
                '/service_contract.AccountSync/AccountUpdateMethod',
                request_serializer=contract__service__pb2.AccountSyncRequest.SerializeToString,
                response_deserializer=contract__service__pb2.AccountSyncResponse.FromString,
                )


class AccountSyncServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AccountSyncMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccountUpdateMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountSyncServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AccountSyncMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountSyncMethod,
                    request_deserializer=contract__service__pb2.AccountSyncRequest.FromString,
                    response_serializer=contract__service__pb2.AccountSyncResponse.SerializeToString,
            ),
            'AccountUpdateMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountUpdateMethod,
                    request_deserializer=contract__service__pb2.AccountSyncRequest.FromString,
                    response_serializer=contract__service__pb2.AccountSyncResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service_contract.AccountSync', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccountSync(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AccountSyncMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service_contract.AccountSync/AccountSyncMethod',
            contract__service__pb2.AccountSyncRequest.SerializeToString,
            contract__service__pb2.AccountSyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccountUpdateMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service_contract.AccountSync/AccountUpdateMethod',
            contract__service__pb2.AccountSyncRequest.SerializeToString,
            contract__service__pb2.AccountSyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ContractRegisterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ContractRegisterMethod = channel.unary_unary(
                '/service_contract.ContractRegister/ContractRegisterMethod',
                request_serializer=contract__service__pb2.ContractInfoRegisterRequest.SerializeToString,
                response_deserializer=contract__service__pb2.ContractInfoRegisterResponse.FromString,
                )
        self.GetContractByCode = channel.unary_unary(
                '/service_contract.ContractRegister/GetContractByCode',
                request_serializer=contract__service__pb2.ContractDetailRequest.SerializeToString,
                response_deserializer=contract__service__pb2.ContractInfoResponse.FromString,
                )


class ContractRegisterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ContractRegisterMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContractByCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ContractRegisterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ContractRegisterMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.ContractRegisterMethod,
                    request_deserializer=contract__service__pb2.ContractInfoRegisterRequest.FromString,
                    response_serializer=contract__service__pb2.ContractInfoRegisterResponse.SerializeToString,
            ),
            'GetContractByCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContractByCode,
                    request_deserializer=contract__service__pb2.ContractDetailRequest.FromString,
                    response_serializer=contract__service__pb2.ContractInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service_contract.ContractRegister', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ContractRegister(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ContractRegisterMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service_contract.ContractRegister/ContractRegisterMethod',
            contract__service__pb2.ContractInfoRegisterRequest.SerializeToString,
            contract__service__pb2.ContractInfoRegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContractByCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service_contract.ContractRegister/GetContractByCode',
            contract__service__pb2.ContractDetailRequest.SerializeToString,
            contract__service__pb2.ContractInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
